name: deploy

on: 
  push:
    branches:
      - master

jobs:

  test:
    name: test
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - name: Homebrew Bundle
        run: brew bundle
      - uses: ruby/setup-ruby@v1
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: Ruby Bundle
        run: bundle install
      - uses: actions/cache@v1
        id: carthage-cache
        with:
          path: Carthage
          key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
      - name: Carthage
        if: steps.carthage-cache.outputs.cache-hit != 'true'
        run: carthage bootstrap --platform iOS --cache-builds
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Test
        run: bundle exec fastlane test
  
  deploy:
    name: deploy
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - name: Homebrew Bundle
        run: brew bundle
      - uses: ruby/setup-ruby@v1
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: Ruby Bundle
        run: bundle install --path vendor/bundle
      - uses: actions/cache@v1
        id: carthage-cache
        with:
          path: Carthage
          key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
      - name: Carthage
        if: steps.carthage-cache.outputs.cache-hit != 'true'
        run: carthage bootstrap --platform iOS --cache-builds
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set build number
        run: xcrun agvtool new-version -all "$GITHUB_RUN_ID"
      - name: Beta Release
        run: bundle exec fastlane ci_beta
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          APPCENTER_API_TOKEN: ${{ secrets.APPCENTER_API_TOKEN }}
